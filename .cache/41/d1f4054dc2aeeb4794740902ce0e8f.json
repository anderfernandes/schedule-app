{"id":"node_modules/date-fns/esm/addBusinessDays/index.js","dependencies":[{"name":"/home/anderson/schedule-app/package.json","includedInParent":true,"mtime":1567709075243},{"name":"/home/anderson/schedule-app/node_modules/date-fns/esm/addBusinessDays/package.json","includedInParent":true,"mtime":499162500000},{"name":"../isWeekend/index.js","loc":{"line":1,"column":22},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/addBusinessDays/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/isWeekend/index.js"},{"name":"../toDate/index.js","loc":{"line":2,"column":19},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/addBusinessDays/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/toDate/index.js"},{"name":"../_lib/toInteger/index.js","loc":{"line":3,"column":22},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/addBusinessDays/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/_lib/toInteger/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addBusinessDays;\n\nvar _index = _interopRequireDefault(require(\"../isWeekend/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * var result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\nfunction addBusinessDays(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = (0, _index2.default)(dirtyDate);\n  var amount = (0, _index3.default)(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var sign = amount < 0 ? -1 : 1;\n  date.setDate(date.getDate() + (0, _index3.default)(amount / 5) * 7);\n  amount %= 5; // to get remaining days not part of a full week\n  // only loops over remaining days or if day is a weekend, ensures a business day is returned\n\n  while (amount || (0, _index.default)(date)) {\n    date.setDate(date.getDate() + sign);\n    if (!(0, _index.default)(date)) amount -= sign;\n  }\n\n  date.setHours(hours);\n  return date;\n}"},"sourceMaps":null,"error":null,"hash":"d80345f6f3b0e33fa458b89a824f2ab8","cacheData":{"env":{}}}