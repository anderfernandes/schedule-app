{"id":"node_modules/date-fns/esm/eachWeekendOfYear/index.js","dependencies":[{"name":"/home/anderson/schedule-app/package.json","includedInParent":true,"mtime":1566425748960},{"name":"/home/anderson/schedule-app/node_modules/date-fns/esm/eachWeekendOfYear/package.json","includedInParent":true,"mtime":499162500000},{"name":"../eachWeekendOfInterval/index.js","loc":{"line":1,"column":34},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/eachWeekendOfYear/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/eachWeekendOfInterval/index.js"},{"name":"../startOfYear/index.js","loc":{"line":2,"column":24},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/eachWeekendOfYear/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/startOfYear/index.js"},{"name":"../endOfYear/index.js","loc":{"line":3,"column":22},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/eachWeekendOfYear/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/endOfYear/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachWeekendOfYear;\n\nvar _index = _interopRequireDefault(require(\"../eachWeekendOfInterval/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../startOfYear/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../endOfYear/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name eachWeekendOfYear\n * @category Year Helpers\n * @summary List all the Saturdays and Sundays in the year.\n *\n * @description\n * Get all the Saturdays and Sundays in the year.\n *\n * @param {Date|Number} date - the given year\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the year\n * var result = eachWeekendOfYear(new Date(2020, 1, 1))\n * //=> [\n * //   Sat Jan 03 2020 00:00:00,\n * //   Sun Jan 04 2020 00:00:00,\n * //   ...\n * //   Sun Dec 27 2020 00:00:00\n * // ]\n * ]\n */\nfunction eachWeekendOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var startDate = (0, _index2.default)(dirtyDate);\n  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');\n  var endDate = (0, _index3.default)(dirtyDate);\n  return (0, _index.default)({\n    start: startDate,\n    end: endDate\n  });\n}"},"sourceMaps":null,"error":null,"hash":"cdfb6a692d677de97a9d5de522f6c809","cacheData":{"env":{}}}