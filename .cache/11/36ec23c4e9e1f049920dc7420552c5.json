{"id":"node_modules/date-fns/esm/isTomorrow/index.js","dependencies":[{"name":"/home/anderson/schedule-app/package.json","includedInParent":true,"mtime":1566425748960},{"name":"/home/anderson/schedule-app/node_modules/date-fns/esm/isTomorrow/package.json","includedInParent":true,"mtime":499162500000},{"name":"../addDays/index.js","loc":{"line":1,"column":20},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/isTomorrow/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/addDays/index.js"},{"name":"../isSameDay/index.js","loc":{"line":2,"column":22},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/isTomorrow/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/isSameDay/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isTomorrow;\n\nvar _index = _interopRequireDefault(require(\"../addDays/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../isSameDay/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name isTomorrow\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n * @pure false\n *\n * @description\n * Is the given date tomorrow?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\nfunction isTomorrow(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return (0, _index2.default)(dirtyDate, (0, _index.default)(Date.now(), 1));\n}"},"sourceMaps":null,"error":null,"hash":"9811e310c5b613f04885a77003bf337d","cacheData":{"env":{}}}