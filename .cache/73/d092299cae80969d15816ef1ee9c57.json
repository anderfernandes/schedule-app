{"id":"node_modules/date-fns/esm/formatRelative/index.js","dependencies":[{"name":"/home/anderson/schedule-app/package.json","includedInParent":true,"mtime":1567709075243},{"name":"/home/anderson/schedule-app/node_modules/date-fns/esm/formatRelative/package.json","includedInParent":true,"mtime":499162500000},{"name":"../differenceInCalendarDays/index.js","loc":{"line":1,"column":37},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/formatRelative/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/differenceInCalendarDays/index.js"},{"name":"../format/index.js","loc":{"line":2,"column":19},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/formatRelative/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/format/index.js"},{"name":"../locale/en-US/index.js","loc":{"line":3,"column":26},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/formatRelative/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/locale/en-US/index.js"},{"name":"../subMilliseconds/index.js","loc":{"line":4,"column":28},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/formatRelative/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/subMilliseconds/index.js"},{"name":"../toDate/index.js","loc":{"line":5,"column":19},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/formatRelative/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/toDate/index.js"},{"name":"../_lib/getTimezoneOffsetInMilliseconds/index.js","loc":{"line":6,"column":44},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/formatRelative/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatRelative;\n\nvar _index = _interopRequireDefault(require(\"../differenceInCalendarDays/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../format/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../locale/en-US/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../subMilliseconds/index.js\"));\n\nvar _index5 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index6 = _interopRequireDefault(require(\"../_lib/getTimezoneOffsetInMilliseconds/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to format\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {String} the date in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.locale` must contain `formatRelative` property\n */\nfunction formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = (0, _index5.default)(dirtyDate);\n  var baseDate = (0, _index5.default)(dirtyBaseDate);\n  var options = dirtyOptions || {};\n  var locale = options.locale || _index3.default;\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  if (!locale.formatRelative) {\n    throw new RangeError('locale must contain formatRelative property');\n  }\n\n  var diff = (0, _index.default)(date, baseDate);\n\n  if (isNaN(diff)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var token;\n\n  if (diff < -6) {\n    token = 'other';\n  } else if (diff < -1) {\n    token = 'lastWeek';\n  } else if (diff < 0) {\n    token = 'yesterday';\n  } else if (diff < 1) {\n    token = 'today';\n  } else if (diff < 2) {\n    token = 'tomorrow';\n  } else if (diff < 7) {\n    token = 'nextWeek';\n  } else {\n    token = 'other';\n  }\n\n  var utcDate = (0, _index4.default)(date, (0, _index6.default)(date));\n  var utcBaseDate = (0, _index4.default)(baseDate, (0, _index6.default)(baseDate));\n  var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, options);\n  return (0, _index2.default)(date, formatStr, options);\n}"},"sourceMaps":null,"error":null,"hash":"c9e4fcc5c869a6aebc7873dba640bb95","cacheData":{"env":{}}}