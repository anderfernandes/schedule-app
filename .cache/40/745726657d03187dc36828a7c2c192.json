{"id":"node_modules/date-fns/esm/getISOWeek/index.js","dependencies":[{"name":"/home/anderson/schedule-app/package.json","includedInParent":true,"mtime":1566425748960},{"name":"/home/anderson/schedule-app/node_modules/date-fns/esm/getISOWeek/package.json","includedInParent":true,"mtime":499162500000},{"name":"../toDate/index.js","loc":{"line":1,"column":19},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/getISOWeek/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/toDate/index.js"},{"name":"../startOfISOWeek/index.js","loc":{"line":2,"column":27},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/getISOWeek/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/startOfISOWeek/index.js"},{"name":"../startOfISOWeekYear/index.js","loc":{"line":3,"column":31},"parent":"/home/anderson/schedule-app/node_modules/date-fns/esm/getISOWeek/index.js","resolved":"/home/anderson/schedule-app/node_modules/date-fns/esm/startOfISOWeekYear/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getISOWeek;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../startOfISOWeek/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../startOfISOWeekYear/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\n\nfunction getISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = (0, _index.default)(dirtyDate);\n  var diff = (0, _index2.default)(date).getTime() - (0, _index3.default)(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}"},"sourceMaps":null,"error":null,"hash":"8a34769dd54af50104da3c4faf7e5006","cacheData":{"env":{}}}